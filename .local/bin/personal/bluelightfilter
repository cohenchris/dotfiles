#!/bin/bash

DEFAULT=2500
REDSHIFT_FILE="$XDG_CONFIG_HOME/.redshift_temp"

HIGH=1000
LOW=5000

# We say that, to "increase" the temperature, we make the screen more orange.
# This is why we subtract in the temp_up function, and add in the temp_down function.
# This makes the script more confusing, but makes more sense to me.


function temp_down() {
  if [[ -f $REDSHIFT_FILE ]]; then
    # Read existing value
    old=$(cat $REDSHIFT_FILE)
    new=$(($old + 75 ))
    if [[ $new -gt $LOW ]]; then
      # don't let value go over boundary
      notify-send "redshift already at lowest value"
      echo $old > $REDSHIFT_FILE
    else
      # update saved redshift value
      echo $new > $REDSHIFT_FILE
      redshift -PO $new
    fi
  else
    # Default value
    echo $DEFAULT > $REDSHIFT_FILE
    redshift -PO $DEFAULT
  fi
}

function temp_up () {
  if [[ -f $REDSHIFT_FILE ]]; then
    # Read existing value
    old=$(cat $REDSHIFT_FILE)
    new=$(($old - 75 ))
    if [[ $new -lt $HIGH ]]; then
      # don't let value surpass lower boundary
      notify-send "redshift already at highest value"
      echo $old > $REDSHIFT_FILE
    else
      # update saved redshift value
      echo $new > $REDSHIFT_FILE
      redshift -PO $new
    fi
  else
    # Default value
    echo $DEFAULT > $REDSHIFT_FILE
    redshift -PO $DEFAULT
  fi
}


option=$1

if [[ "$option" == "up" ]]; then
  temp_up 
elif [[ "$option" == "down" ]]; then
  temp_down
elif [[ "$option" == "off" ]]; then
  rm $REDSHIFT_FILE
  redshift -x
else
  # function not supported
  exit
fi
