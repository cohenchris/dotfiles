# https://www.youtube.com/watch?v=XNJ4oKla8B0

# You should be in UEFI mode - this will be empty if not
ls /sys/firmware/efi

# time
timedatectl set-ntp true

################################################################################
#                           partitioning / mounting                            #
################################################################################
# Partition your targeted drive
gdisk /dev/sda
                # n
                # partition default
                # first sector default
                # last sector +1G
                # hex code ef00

                # n
                # partition default
                # first sector default
                # last sector default
                # hex code default

                # w

# Filesystem Creation
mkfs.fat -F32 /dev/sda1 # Boot partition
mkfs.ext4 /dev/sda2 # Main partition

# Mount boot partition into a directory on the main partition
mount /dev/sda2 /mnt
mkdir -p /mnt/boot/efi
mount /dev/sda1 /mnt/boot/efi

################################################################################
#                 drives, booting, and basic functionality                     #
################################################################################
# Install linux + vim
pacstrap /mnt base base-devel linux-lts linux-firmware vim
# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab
# Go into your new Arch partition
arch-chroot /mnt

# Create swap partition - general rule of thumb is to make it the same size as your RAM
fallocate -l 32GB /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
echo "/swapfile none swap defaults 0 0" >> /etc/fstab

# Set language and time zone
vim /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime

# Set hostname
echo "arch" > /etc/hostname

# Set local machine addresses
vim /etc/hosts
              # 127.0.0.1   localhost
              # ::1         localhost
              # 1270.1.1    arch.localdomain    arch

# Set a root password
passwd

# Core basic packages
pacman -S efibootmgr networkmanager network-manager-applet wireless_tools wpa_supplicant dialog os-prober mtools dosfstools linux-lts-headers git bluez bluez-utils pulseaudio-bluetooth xdg-utils xdg-user-dirs grub
# Enable internet
systemctl enable NetworkManager
# Enable bluetooth
systemctl enable bluetooth

# Install GRUB
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg

# add your personal user
useradd -mg wheel <username>
passwd <username>
# uncomment wheel line - gives sudo access to wheel members
vim /etc/sudoers

# Go back to the USB stick and reboot
exit
reboot

################################################################################
#                                 dotfiles                                     #
################################################################################
********************************
# Log in w/ newly created user #
********************************

pacman -Syu

git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si
cd ../
rm -rf paru/

# load dotfiles (YADM)
paru -Syu yadm
yadm clone https://github.com/cohenchris/dotfiles

# ZFS stuff
paru -Syu zfs-dkms
sudo modprobe zfs
sudo systemctl enable zfs-import-cache.service zfs-import.target zfs.target zfs-zed zfs-mount.service

# Bootstrap!!!
yadm bootstrap
